name: Deploy helm chart to Kubernetes

on:
  push:
    branches:
      - dev
    paths:
      - '.github/workflows/deploy-dev.yml'
  watch:
    types: [started]      

env:
  CHART_NAME: 'ghost'
  CHART_REPO: 'https://geek-cookbook.github.io/helm-ghost'
  # Until I PR the fix for the updatestrategy
  # CHART_REPO: 'https://charts.bitnami.com/bitnami'
  INGRESS_HOST: 'dev-ghost.funkypenguin.co.nz'
  KUBECONFIG_FILE: '${{ secrets.DEV_KUBECONFIG }}'


jobs:
  # Since we're allowing the workflow to be triggered with a star, only trigger if a collaborator performed
  # the action which triggered us (https://stackoverflow.com/questions/58933155/manual-workflow-triggers-in-github-actions/58965362#58965362)
  i-can-haz-access:
    runs-on: ubuntu-latest

    steps:
    - uses: octokit/request-action@v2.0.0
      with:
        route: GET /repos/:repository/collaborators/${{ github.actor }}
        repository: ${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cr-deploy-chart:
    needs: [i-can-haz-access] # Don't proceed unless authorize step above passed
    name: Deploy chart
    runs-on: ubuntu-latest
    steps:
            
    - name: 'Install chart'
      uses: 'deliverybot/helm@master'
      with:
        release: '${{env.CHART_NAME}}'
        namespace: 'dev-${{env.CHART_NAME}}'
        helm: 'helm3'
        chart: '${{env.CHART_NAME}}'
        repository: '${{env.CHART_REPO}}'

        # Insert values.yaml overrides here, indented as you would in a regular YAML file
        values: |
          resources:
            requests:
              memory: 64Mi
              cpu: 100m        
          ghostProtocol: https
          ghostPort: 443
          ghostHost: ${{ env.INGRESS_HOST }}
          ghostUsername: ${{ secrets.GHOST_USERNAME }}
          ghostEmail: ${{ secrets.GHOST_EMAIL }}
          ghostPassword: ${{ secrets.DEV_GHOST_PASSWORD }}
          ghostBlogTitle: Funky Penguin
          smtpHost: ${{ secrets.GHOST_SMTP_HOST }}
          smtpPort: ${{ secrets.GHOST_SMTP_PORT }}
          smtpUser: ${{ secrets.GHOST_SMTP_USER }}
          smtpPassword: ${{ secrets.GHOST_SMTP_PASSWORD }}
          smtpService: mailgun
          smtpFromAddress: noreply@funkypenguin.co.nz
          mariadb:
            db:
              # Why not just let the chart give us a random password? 
              # Because the data is going to persist in a PVC, even if we delete the helm
              # release, and when we re-create the helm release, we might actually _want_ our data ;)
              password: ${{ secrets.GHOST_DB_PASSWORD }}
              rootUser:
                password: ${{ secrets.GHOST_DB_ROOT_PASSWORD }}
            master:
              persistence:
                size: 1Gi              
          service:
            type: ClusterIP # We'll access it via nginx-ingress-controller
          ingress:
            ## Set to true to enable ingress record generation
            enabled: true
            hosts:
              - name: '${{ env.INGRESS_HOST }}'
                path: /
                tls: true
                tlsSecret: letsencrypt-wildcard-cert
            annotations:
              kubernetes.io/ingress.class: nginx
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
          persistence:
            size: 1Gi
